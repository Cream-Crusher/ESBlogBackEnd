services:

  redis:
    ports:
      - "6379:6379"
    networks:
      - traefik-proxy
    volumes:
      - redis_data:/data

  catalogdb:
    env_file:
      - services/catalog_service/deploy/env/dev.env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - 27017:27017
    networks:
      - traefik-proxy
    volumes:
      - ./volumes/mongodb:/var/lib/mongodb/data

  authdb:
    env_file:
      - services/auth_service/deploy/env/dev.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d AuthDB"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    networks:
      - traefik-proxy
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data

  rabbitmq:
    hostname: rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
    env_file:
      - infrastructure/rabbitMQ/env/dev.env
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    networks:
      - traefik-proxy

  auth_api:
    env_file:
      - services/auth_service/deploy/env/dev.env
    environment:
      - POSTGRES_HOST=authdb
      - POSTGRES_PORT=5432
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
    depends_on:
      - redis
      - authdb
      - rabbitmq
    ports:
      - "8000:8000"
    networks:
      - traefik-proxy

  catalog_api:
    env_file:
      - services/catalog_service/deploy/env/dev.env
    environment:
      - MONGO_HOST=catalogdb
    depends_on:
      - catalogdb
    ports:
      - "8001:8001"
    networks:
      - traefik-proxy

  mailing:
    env_file:
      - services/mailing_service/deploy/env/dev.env
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - traefik-proxy

  elasticsearch:
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - traefik-proxy

  kibana:
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - traefik-proxy

  logstash:
    container_name: logstash
    ports:
      - "5044:5044"
      - "50000:50000/tcp"
      - "50000:50000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: logstash
    depends_on:
      - elasticsearch
    networks:
      - traefik-proxy

networks:
  traefik-proxy:
    name: traefik-proxy
    external: true
