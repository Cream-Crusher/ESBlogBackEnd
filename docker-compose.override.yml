services:

  redis:
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  dbmongo_catalog_service:
    env_file:
      - infrastructure/mongodb/env/catalog_service.env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - 27017:27017
    networks:
      - traefik-proxy
    volumes:
      - ./volumes/mongodb:/var/lib/mongodb/data

  dbpostgres_auth:
    env_file:
      - infrastructure/postgres/env/auth_service.env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ESBlogAuth"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    networks:
      - traefik-proxy
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data

  rabbitmq:
    hostname: rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
    env_file:
      - infrastructure/rabbitMQ/env/dev.env
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    networks:
      - traefik-proxy

  auth_wab_api:
    env_file:
      - services/auth_service/deploy/env/dev.env
    depends_on:
      - dbpostgres_auth
      - rabbitmq
    ports:
      - "8000:8000"
    networks:
      - traefik-proxy

  catalog_web_api:
    env_file:
      - services/catalog_service/deploy/env/dev.env
    depends_on:
      - dbmongo_catalog_service
    ports:
      - "8001:8001"
    networks:
      - traefik-proxy

  mailing_service:
    env_file:
      - services/mailing_service/deploy/env/dev.env
    depends_on:
      - rabbitmq
    networks:
      - traefik-proxy

networks:
  traefik-proxy:
    name: traefik-proxy
    external: true
